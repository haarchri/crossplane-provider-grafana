---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: rulegroups.grafana.jet.crossplane.io
spec:
  group: grafana.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafanajet
    kind: RuleGroup
    listKind: RuleGroupList
    plural: rulegroups
    singular: rulegroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RuleGroup is the Schema for the RuleGroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RuleGroupSpec defines the desired state of RuleGroup
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  folderUid:
                    description: The UID of the folder that the group belongs to.
                    type: string
                  intervalSeconds:
                    description: The interval, in seconds, at which all rules in the
                      group are evaluated. If a group contains many rules, the rules
                      are evaluated sequentially.
                    type: number
                  name:
                    description: The name of the rule group.
                    type: string
                  orgId:
                    description: The ID of the org to which the group belongs.
                    type: number
                  rule:
                    description: The rules within the group.
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Key-value pairs of metadata to attach to the
                            alert rule that may add user-defined context, but cannot
                            be used for matching, grouping, or routing. Defaults to
                            `map[]`.
                          type: object
                        condition:
                          description: The `ref_id` of the query node in the `data`
                            field to use as the alert condition.
                          type: string
                        data:
                          description: A sequence of stages that describe the contents
                            of the rule.
                          items:
                            properties:
                              datasourceUid:
                                description: The UID of the datasource being queried,
                                  or "-100" if this stage is an expression stage.
                                type: string
                              model:
                                description: Custom JSON data to send to the specified
                                  datasource when querying.
                                type: string
                              queryType:
                                description: An optional identifier for the type of
                                  query being executed. Defaults to ``.
                                type: string
                              refId:
                                description: A unique string to identify this query
                                  stage within a rule.
                                type: string
                              relativeTimeRange:
                                description: The time range, relative to when the
                                  query is executed, across which to query.
                                items:
                                  properties:
                                    from:
                                      description: The number of seconds in the past,
                                        relative to when the rule is evaluated, at
                                        which the time range begins.
                                      type: number
                                    to:
                                      description: The number of seconds in the past,
                                        relative to when the rule is evaluated, at
                                        which the time range ends.
                                      type: number
                                  required:
                                  - from
                                  - to
                                  type: object
                                type: array
                            required:
                            - datasourceUid
                            - model
                            - refId
                            - relativeTimeRange
                            type: object
                          type: array
                        execErrState:
                          description: Describes what state to enter when the rule's
                            query is invalid and the rule cannot be executed. Options
                            are OK, Error, and Alerting. Defaults to `Alerting`.
                          type: string
                        for:
                          description: The amount of time for which the rule must
                            be breached for the rule to be considered to be Firing.
                            Before this time has elapsed, the rule is only considered
                            to be Pending. Defaults to `0`.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Key-value pairs to attach to the alert rule
                            that can be used in matching, grouping, and routing. Defaults
                            to `map[]`.
                          type: object
                        name:
                          description: The name of the alert rule.
                          type: string
                        noDataState:
                          description: Describes what state to enter when the rule's
                            query returns No Data. Options are OK, NoData, and Alerting.
                            Defaults to `NoData`.
                          type: string
                      required:
                      - condition
                      - data
                      - name
                      type: object
                    type: array
                required:
                - folderUid
                - intervalSeconds
                - name
                - orgId
                - rule
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RuleGroupStatus defines the observed state of RuleGroup.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
