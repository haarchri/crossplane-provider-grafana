---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: datasources.grafana.jet.crossplane.io
spec:
  group: grafana.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - grafanajet
    kind: DataSource
    listKind: DataSourceList
    plural: datasources
    singular: datasource
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataSource is the Schema for the DataSources API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataSourceSpec defines the desired state of DataSource
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessMode:
                    description: 'The method by which Grafana will access the data
                      source: `proxy` or `direct`. Defaults to `proxy`.'
                    type: string
                  basicAuthEnabled:
                    description: Whether to enable basic auth for the data source.
                      Defaults to `false`.
                    type: boolean
                  basicAuthPasswordSecretRef:
                    description: Basic auth password. Deprecated:Use secure_json_data_encoded
                      instead. It supports arbitrary JSON data, and therefore all
                      attributes. This attribute is removed in Grafana 9.0+. Defaults
                      to ``.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  basicAuthUsername:
                    description: Basic auth username. Defaults to ``.
                    type: string
                  databaseName:
                    description: (Required by some data source types) The name of
                      the database to use on the selected data source server. Defaults
                      to ``.
                    type: string
                  httpHeadersSecretRef:
                    additionalProperties:
                      description: A SecretKeySelector is a reference to a secret
                        key in an arbitrary namespace.
                      properties:
                        key:
                          description: The key to select.
                          type: string
                        name:
                          description: Name of the secret.
                          type: string
                        namespace:
                          description: Namespace of the secret.
                          type: string
                      required:
                      - key
                      - name
                      - namespace
                      type: object
                    description: Custom HTTP headers
                    type: object
                  isDefault:
                    description: Whether to set the data source as default. This should
                      only be `true` to a single data source. Defaults to `false`.
                    type: boolean
                  jsonData:
                    description: '(Required by some data source types). Deprecated:
                      Use json_data_encoded instead. It supports arbitrary JSON data,
                      and therefore all attributes.'
                    items:
                      properties:
                        alertmanagerUid:
                          description: (Prometheus) The name of the Alertmanager datasource
                            to manage alerts via UI
                          type: string
                        assumeRoleArn:
                          description: (CloudWatch, Athena) The ARN of the role to
                            be assumed by Grafana when using the CloudWatch or Athena
                            data source.
                          type: string
                        authType:
                          description: (CloudWatch, Athena) The authentication type
                            used to access the data source.
                          type: string
                        authenticationType:
                          description: '(Stackdriver) The authentication type: `jwt`
                            or `gce`.'
                          type: string
                        catalog:
                          description: (Athena) Athena catalog.
                          type: string
                        clientEmail:
                          description: (Stackdriver) Service account email address.
                          type: string
                        clientId:
                          description: (Azure Monitor) The service account client
                            id.
                          type: string
                        cloudName:
                          description: (Azure Monitor) The cloud name.
                          type: string
                        connMaxLifetime:
                          description: (MySQL, PostgreSQL, and MSSQL) Maximum amount
                            of time in seconds a connection may be reused (Grafana
                            v5.4+).
                          type: number
                        customMetricsNamespaces:
                          description: (CloudWatch) A comma-separated list of custom
                            namespaces to be queried by the CloudWatch data source.
                          type: string
                        database:
                          description: (Athena) Name of the database within the catalog.
                          type: string
                        defaultBucket:
                          description: (InfluxDB) The default bucket for the data
                            source.
                          type: string
                        defaultProject:
                          description: (Stackdriver) The default project for the data
                            source.
                          type: string
                        defaultRegion:
                          description: (CloudWatch, Athena) The default region for
                            the data source.
                          type: string
                        derivedField:
                          description: (Loki) See https://grafana.com/docs/grafana/latest/datasources/loki/#derived-fields
                          items:
                            properties:
                              datasourceUid:
                                type: string
                              matcherRegex:
                                type: string
                              name:
                                type: string
                              url:
                                type: string
                            type: object
                          type: array
                        encrypt:
                          description: '(MSSQL) Connection SSL encryption handling:
                            ''disable'', ''false'' or ''true''.'
                          type: string
                        esVersion:
                          description: (Elasticsearch) Elasticsearch semantic version
                            (Grafana v8.0+).
                          type: string
                        externalId:
                          description: (CloudWatch, Athena) If you are assuming a
                            role in another account, that has been created with an
                            external ID, specify the external ID here.
                          type: string
                        githubUrl:
                          description: (Github) Github URL
                          type: string
                        graphiteVersion:
                          description: (Graphite) Graphite version.
                          type: string
                        httpMethod:
                          description: (Prometheus) HTTP method to use for making
                            requests.
                          type: string
                        implementation:
                          description: (Alertmanager) Implementation of Alertmanager.
                            Either 'cortex' or 'prometheus'
                          type: string
                        interval:
                          description: (Elasticsearch) Index date time format. nil(No
                            Pattern), 'Hourly', 'Daily', 'Weekly', 'Monthly' or 'Yearly'.
                          type: string
                        logLevelField:
                          description: (Elasticsearch) Which field should be used
                            to indicate the priority of the log message.
                          type: string
                        logMessageField:
                          description: (Elasticsearch) Which field should be used
                            as the log message.
                          type: string
                        manageAlerts:
                          description: (Prometheus) Manage alerts.
                          type: boolean
                        maxConcurrentShardRequests:
                          description: (Elasticsearch) Maximum number of concurrent
                            shard requests.
                          type: number
                        maxIdleConns:
                          description: (MySQL, PostgreSQL and MSSQL) Maximum number
                            of connections in the idle connection pool (Grafana v5.4+).
                          type: number
                        maxLines:
                          description: (Loki) Upper limit for the number of log lines
                            returned by Loki
                          type: number
                        maxOpenConns:
                          description: (MySQL, PostgreSQL and MSSQL) Maximum number
                            of open connections to the database (Grafana v5.4+).
                          type: number
                        orgSlug:
                          description: (Sentry) Organization slug.
                          type: string
                        organization:
                          description: (InfluxDB) An organization is a workspace for
                            a group of users. All dashboards, tasks, buckets, members,
                            etc., belong to an organization.
                          type: string
                        outputLocation:
                          description: (Athena) AWS S3 bucket to store execution outputs.
                            If not specified, the default query result location from
                            the Workgroup configuration will be used.
                          type: string
                        postgresVersion:
                          description: (PostgreSQL) Postgres version as a number (903/904/905/906/1000)
                            meaning v9.3, v9.4, etc.
                          type: number
                        profile:
                          description: (CloudWatch, Athena) The credentials profile
                            name to use when authentication type is set as 'Credentials
                            file'.
                          type: string
                        queryTimeout:
                          description: (Prometheus) Timeout for queries made to the
                            Prometheus data source in seconds.
                          type: string
                        sigv4AssumeRoleArn:
                          description: (Elasticsearch and Prometheus) Specifies the
                            ARN of an IAM role to assume.
                          type: string
                        sigv4Auth:
                          description: (Elasticsearch and Prometheus) Enable usage
                            of SigV4.
                          type: boolean
                        sigv4AuthType:
                          description: '(Elasticsearch and Prometheus) The Sigv4 authentication
                            provider to use: ''default'', ''credentials'' or ''keys''
                            (AMG: ''workspace-iam-role'').'
                          type: string
                        sigv4ExternalId:
                          description: (Elasticsearch and Prometheus) When assuming
                            a role in another account use this external ID.
                          type: string
                        sigv4Profile:
                          description: (Elasticsearch and Prometheus) Credentials
                            profile name, leave blank for default.
                          type: string
                        sigv4Region:
                          description: (Elasticsearch and Prometheus) AWS region to
                            use for Sigv4.
                          type: string
                        sslMode:
                          description: (PostgreSQL) SSLmode. 'disable', 'require',
                            'verify-ca' or 'verify-full'.
                          type: string
                        subscriptionId:
                          description: (Azure Monitor) The subscription id
                          type: string
                        tenantId:
                          description: (Azure Monitor) Service account tenant ID.
                          type: string
                        timeField:
                          description: (Elasticsearch) Which field that should be
                            used as timestamp.
                          type: string
                        timeInterval:
                          description: (Prometheus, Elasticsearch, InfluxDB, MySQL,
                            PostgreSQL, and MSSQL) Lowest interval/step value that
                            should be used for this data source. Sometimes called
                            "Scrape Interval" in the Grafana UI.
                          type: string
                        timescaledb:
                          description: (PostgreSQL) Enable usage of TimescaleDB extension.
                          type: boolean
                        tlsAuth:
                          description: (All) Enable TLS authentication using client
                            cert configured in secure json data.
                          type: boolean
                        tlsAuthWithCaCert:
                          description: (All) Enable TLS authentication using CA cert.
                          type: boolean
                        tlsConfigurationMethod:
                          description: (All) SSL Certificate configuration, either
                            by ‘file-path’ or ‘file-content’.
                          type: string
                        tlsSkipVerify:
                          description: (All) Controls whether a client verifies the
                            server’s certificate chain and host name.
                          type: boolean
                        tokenUri:
                          description: (Stackdriver) The token URI used, provided
                            in the service account key.
                          type: string
                        tracingDatasourceUid:
                          description: (Cloudwatch) The X-Ray datasource uid to associate
                            to this Cloudwatch datasource.
                          type: string
                        tsdbResolution:
                          description: (OpenTSDB) Resolution.
                          type: number
                        tsdbVersion:
                          description: (OpenTSDB) Version.
                          type: number
                        version:
                          description: (InfluxDB) InfluxQL or Flux.
                          type: string
                        workgroup:
                          description: (Athena) Workgroup to use.
                          type: string
                        xpackEnabled:
                          description: (Elasticsearch) Enable X-Pack support.
                          type: boolean
                      type: object
                    type: array
                  jsonDataEncoded:
                    description: Serialized JSON string containing the json data.
                      Replaces the json_data attribute, this attribute can be used
                      to pass configuration options to the data source. To figure
                      out what options a datasource has available, see its docs or
                      inspect the network data when saving it from the Grafana UI.
                    type: string
                  name:
                    description: A unique name for the data source.
                    type: string
                  passwordSecretRef:
                    description: '(Required by some data source types) The password
                      to use to authenticate to the data source. Deprecated: Use secure_json_data_encoded
                      instead. It supports arbitrary JSON data, and therefore all
                      attributes. This attribute is removed in Grafana 9.0+. Defaults
                      to ``.'
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  secureJsonData:
                    description: 'Deprecated: Use secure_json_data_encoded instead.
                      It supports arbitrary JSON data, and therefore all attributes.'
                    items:
                      properties:
                        accessKeySecretRef:
                          description: (CloudWatch, Athena) The access key used to
                            access the data source.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        accessTokenSecretRef:
                          description: (Github) The access token used to access the
                            data source.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        authTokenSecretRef:
                          description: (Sentry) Authorization token.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        basicAuthPasswordSecretRef:
                          description: (All) Password to use for basic authentication.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        clientSecretSecretRef:
                          description: (Azure Monitor) Client secret for authentication.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        passwordSecretRef:
                          description: (All) Password to use for authentication.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        privateKeySecretRef:
                          description: (Stackdriver) The service account key `private_key`
                            to use to access the data source.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        secretKeySecretRef:
                          description: (CloudWatch, Athena) The secret key to use
                            to access the data source.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        sigv4AccessKeySecretRef:
                          description: (Elasticsearch and Prometheus) SigV4 access
                            key. Required when using 'keys' auth provider.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        sigv4SecretKeySecretRef:
                          description: (Elasticsearch and Prometheus) SigV4 secret
                            key. Required when using 'keys' auth provider.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        tlsClientCertSecretRef:
                          description: (All) TLS Client cert for outgoing requests.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        tlsClientKeySecretRef:
                          description: (All) TLS Client key for outgoing requests.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        tlscaCertSecretRef:
                          description: (All) CA cert for out going requests.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  secureJsonDataEncodedSecretRef:
                    description: Serialized JSON string containing the secure json
                      data. Replaces the secure_json_data attribute, this attribute
                      can be used to pass secure configuration options to the data
                      source. To figure out what options a datasource has available,
                      see its docs or inspect the network data when saving it from
                      the Grafana UI.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  type:
                    description: The data source type. Must be one of the supported
                      data source keywords.
                    type: string
                  uid:
                    description: Unique identifier. If unset, this will be automatically
                      generated.
                    type: string
                  url:
                    description: The URL for the data source. The type of URL required
                      varies depending on the chosen data source type.
                    type: string
                  username:
                    description: (Required by some data source types) The username
                      to use to authenticate to the data source. Defaults to ``.
                    type: string
                required:
                - name
                - type
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DataSourceStatus defines the observed state of DataSource.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
